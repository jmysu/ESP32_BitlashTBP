; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:C3mBusN4_Bitlash]
platform = espressif32
board = esp32-c3-devkitm-1
framework = arduino

;board_build.partitions = 2m1728_256.csv
;board_build.flash_mode = qio
;board_upload.flash_size = 2MB

;board_build.partitions = 4m1536x2_960.csv
board_build.partitions = 4m1664x2_608.csv
board_build.flash_mode = qio
board_upload.flash_size = 4MB
;nvs,      data, nvs,     0x9000,  0x5000,  (  20480)
;otadata,  data, ota,     0xe000,  0x2000,  (   8192)
;app0,     app,  ota_0,   0x10000, 0x1A0000,(1703936)
;app1,     app,  ota_1,   0x1B0000,0x1A0000,
;spiffs,   data, spiffs,  0x350000,0x0A0000,( 655360)
;spiffs,   data, spiffs,  0x350000,0x098000,( 608K) 
;coredump, data, coredump,,        32K

board_build.filesystem = littlefs
;upload_speed = 115200
upload_speed = 921600
monitor_speed = 115200
monitor_filters = esp32_exception_decoder
monitor_rts = 0
monitor_dtr = 0

;monitor_port = /dev/cu.usbmodemFA131
;upload_port  = /dev/cu.usbmodemFD130
lib_ldf_mode = deep
;lib_deps =
;    https://github.com/arttupii/EspNowFloodingMesh
;    https://github.com/arttupii/espNowFloodingMeshLibrary
;    https://github.com/gmag11/QuickESPNow
;    ArduinoJson
;    paulstoffregen/Time 
;    https://github.com/spacehuhn/SimpleList
;    https://github.com/spacehuhn/SimpleMap
;    https://github.com/xoseperez/messagepack.git
;
;    https://github.com/binzume/esp32quickjs.git
;    https://github.com/paulo-raca/ArduinoBufferedStreams
;    //Scripts (All MIT license)
;    https://github.com/BleuLlama/TinyBasicPlus
;    https://github.com/lumostor/bitlash-esp32
;    //ESPUI
;    https://github.com/s00500/ESPUI
;     LittleFS

;lib_ignore =
    ;ESP Async WebServer ; force the use of the esphome version
    ;AsyncTCP ; force the use of the esphome version
    ;LittleFS_esp32 ; force the use of internal LittleFS

build_flags = 
;   ${env.build_flags}
    #BOARDNAME for #pragma message infomation
    -fno-diagnostics-show-caret
    #MACRO for pin define, enable ONLY ONE
    -D C3KIT12F=0
    -D C3mBUSpico=0
    -D C3mBUS0=0
    -D C3mBUS1=0
    -D PIN_C3mBusN4=1

    #Define BOARDNAME 
    ;-D BOARDNAME=\"C3mBUSpico\"   
    ;-D BOARDNAME=\"C3mBUS0_2M\"  
    -D BOARDNAME=\"C3mBusN4\"  
    
    #define DeviceInfo for Banner
    -D DEVICEINFO=\"Bitlash' 'TinyBasic+' '\"

    #LOG COLORS
    -D CONFIG_ARDUHAL_LOG_COLORS=1
    -D CORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_INFO

    #for USBCDC
    -D ARDUINO_USB_MODE=1
    -D ARDUINO_USB_CDC_ON_BOOT=1

    #WIFI   ~400K
    -D ENABLE_WIFI_SNTP=1

    #ELEGANT_OTA ~200K(+400K)
    -D ENABLE_OTA=1

    #ESPUI ~100K
    -D ENABLE_ESPUI=1

    #ESPNOW ~10K(+400K)
    -D ENABLE_QESPNOW=1
    -D ENABLE_ESPNOW_LR=0
 
    ;-I lib
;lib_extra_dirs = lib/BitlashAPI/src 
build_type = debug

debug_tool = esp-builtin
debug_init_break = tbreak setup
